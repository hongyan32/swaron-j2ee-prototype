<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>org.app</groupId>
		<artifactId>app-parent</artifactId>
		<version>1.0.0</version>
		<relativePath>../app-parent/pom.xml</relativePath>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.app</groupId>
	<artifactId>app-repo</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>Application Repository Module</name>
	<description>
		In addition to the three vertical layers, there is also the infrastructure. As the picture shows, it supports all of the three layers in different ways,facilitating communication between the layers. In simple terms, the infrastructure consists of everything that exists independently of our application: external libraries, database engine, application server and so on.
		Also,we consider code and configuration files that glues the other layers to the infrastructure as part of the infrastructure layer. Looking for example at thepersistence aspect, the database schema definition, Hibernate configuration and mapping files and implementations of the repository interfaces are part of the infrastructure layer.
		While it can be tricky to give a solid definition of what kind of code belongs to the infrastructure layer for any given situation, it should be possible tocompletely stub out the infrastructure in pure Java unit/scenario tests and still be able to use the domain layer and possibly the application layer to work out the core business problems.
	</description>

	<properties>
		<db.name>app</db.name>
	</properties>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<configuration>
							<target>
								<delete file="${basedir}/src/test/resources/jdbc.properties" />
								<copy file="${basedir}/src/test/resources/jdbc-${db.type}.properties" tofile="${basedir}/src/test/resources/jdbc.properties" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<contexts>test</contexts>
					<changeLogFile>src/test/resources/dbdata/db-changelog.xml</changeLogFile>
					<driver>${jdbc.driverClassName}</driver>
					<url>${jdbc.url}</url>
					<username>${jdbc.username}</username>
					<password>${jdbc.password}</password>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<!-- ================= Database Profiles ================= -->
		<profile>
			<id>psql</id>
			<properties>
				<jdbc.groupId>postgresql</jdbc.groupId>
				<jdbc.artifactId>postgresql</jdbc.artifactId>
				<jdbc.version>9.1-901.jdbc4</jdbc.version>
				<jdbc.driverClassName>org.postgresql.Driver</jdbc.driverClassName>
				<jdbc.url>jdbc:postgresql://localhost/${db.name}</jdbc.url>
				<jdbc.username>dev</jdbc.username>
				<jdbc.password>dev8</jdbc.password>
				<db.type>psql</db.type>
			</properties>
		</profile>
		<profile>
			<id>h2</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<jdbc.groupId>com.h2database</jdbc.groupId>
				<jdbc.artifactId>h2</jdbc.artifactId>
				<jdbc.version>1.2.147</jdbc.version>
				<jdbc.driverClassName>org.h2.Driver</jdbc.driverClassName>
				<jdbc.url>jdbc:h2:~/h2/${db.name}</jdbc.url>
				<jdbc.username>sa</jdbc.username>
				<db.type>h2</db.type>
			</properties>
		</profile>
		<profile>
			<id>mysql</id>
			<properties>
				<jdbc.groupId>mysql</jdbc.groupId>
				<jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
				<jdbc.version>5.1.10</jdbc.version>
				<jdbc.driverClassName>com.mysql.jdbc.Driver</jdbc.driverClassName>
				<jdbc.url>jdbc:mysql://localhost/${db.name}</jdbc.url>
				<jdbc.username>root</jdbc.username>
				<jdbc.password>root</jdbc.password>
				<db.type>mysql</db.type>
			</properties>
		</profile>
		<profile>
			<id>oracle</id>
			<properties>
				<!-- http://maven.jahia.org/maven2/com/oracle/ojdbc6/11.1.0.7.0/ -->
				<!-- http://www.oracle.com/technetwork/database/features/jdbc/index-091264.html -->
				<!-- mvn install:install-file -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=11.1.0.7.0 -Dpackaging=jar -Dfile=d:\ojdbc6.jar -->
				<jdbc.groupId>com.oracle</jdbc.groupId>
				<jdbc.artifactId>ojdbc6</jdbc.artifactId>
				<jdbc.version>11.1.0.7.0</jdbc.version>
				<jdbc.driverClassName>oracle.jdbc.OracleDriver</jdbc.driverClassName>
				<jdbc.url>jdbc:oracle:thin:@//localhost:1521/ORCL</jdbc.url>
				<jdbc.username>system</jdbc.username>
				<jdbc.password>system</jdbc.password>
				<db.type>oracle</db.type>
			</properties>
		</profile>
		<profile>
			<id>mssql</id>
			<properties>
				<jdbc.groupId>net.sourceforge.jtds</jdbc.groupId>
				<jdbc.artifactId>jtds</jdbc.artifactId>
				<jdbc.version>1.2.4</jdbc.version>
				<jdbc.driverClassName>net.sourceforge.jtds.jdbc.Driver</jdbc.driverClassName>
				<jdbc.url>jdbc:jtds:sqlserver://localhost:1433/${db.name};domain=X;userNTLMv2=true</jdbc.url>
				<jdbc.username>wuser</jdbc.username>
				<jdbc.password>wuser</jdbc.password>
				<db.type>mssql</db.type>
			</properties>
		</profile>
	</profiles>
	<dependencies>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<version>2.0.2</version>
			<scope>test</scope>
		</dependency>
		<!-- database -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.2.147</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.16</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.jtds</groupId>
			<artifactId>jtds</artifactId>
			<version>1.2.4</version>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.1-901.jdbc4</version>
		</dependency>
		<dependency>
		  <groupId>com.oracle</groupId>
		  <artifactId>ojdbc6</artifactId>
		  <version>11.1.0.7.0</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		<!-- orm hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate-version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate-version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${hibernate-version}</version>
		</dependency>
		<!-- sub modules -->
		<dependency>
			<groupId>org.app</groupId>
			<artifactId>app-data</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.app</groupId>
			<artifactId>app-utils</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>
	</dependencies>
	<repositories>
		<repository>
			<id>oracle-jdbc</id>
			<url>http://maven.jahia.org/maven2</url>
		</repository>
	</repositories>
</project>
